"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateTokenAndClaims = validateTokenAndClaims;
const jwtService_1 = require("./jwtService");
/**
 * Validates a JWT token and checks if any of the supplied claims are present in the decoded token.
 *
 * @param {string} token - The JWT token to be validated.
 * @param {string[]} claimList - An array of claims  to check against the decoded token.
 * @returns {ClaimValidationResult} - Returns key value pair of every claim provided in string:boolean format,
 * true if the claim is found in the token, otherwise false.
*/
function validateTokenAndClaims(token, claimList) {
    const decodedToken = (0, jwtService_1.verifyToken)(token);
    const claimResult = {};
    if (!decodedToken || typeof decodedToken === 'string') {
        claimList.forEach((claim) => (claimResult[claim] = false));
        return claimResult;
    }
    const claimsFromToken = decodedToken.claims;
    claimList.forEach((claim) => {
        claimResult[claim] = claimsFromToken.includes(claim);
    });
    return claimResult;
}
//# sourceMappingURL=tazamaService.js.map